import cv2
import numpy as np

# 加载图像
image = cv2.imread("image.png")

# 将图像转换为灰度图像
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# 使用 `cv2.HoughCircles()` 函数检测图像中的圆
circles = cv2.HoughCircles(gray, cv2.HOUGH_GRADIENT, 1, 20,
                           param1=50, param2=30, minRadius=0, maxRadius=0)

# 从检测到的圆中选择最像圆的圆
best_circle = None
for circle in circles[0, :]:
    # 计算圆的面积
    area = np.pi * circle[2] ** 2
    # 如果圆的面积是最大的，则将其保存为最像圆的圆
    if best_circle is None or area > best_circle[2]:
        best_circle = circle

# 绘制最像圆的圆
cv2.circle(image, (best_circle[0], best_circle[1]), best_circle[2],
            (0, 255, 0), 2)

# 显示图像
cv2.imshow("Image", image)
cv2.waitKey(0)
